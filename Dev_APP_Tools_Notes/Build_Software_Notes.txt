This note file is for build software.

****************************************************
******* Apache Ant **********************
****************************************************
Apache Ant Notes:
Links:

http://www.codejava.net/ides/eclipse/how-to-create-ant-build-file-for-existing-java-project-in-eclipse
http://ant.apache.org
http://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html

A. Installation
file:///Users/rduvalwa2/Downloads/apache-ant 1.9.4/manual/install.html#sysrequirements
B. Ant Test XML for reports
<?xml version="1.0" encoding="UTF-8"?>
<project name="test" default="exec" basedir=".">

	<property name="src" value="./src" />
	<property name="lib" value="./src/external_classes/"/>
	<property name="bin" value="./bin" />
	<property name="report" value="./report" />
	<path id="test.classpath">
		<pathelement location="${bin}" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<presetdef name="javac">
    <javac includeantruntime="false" />
    </presetdef>
	<target name="init">
		<delete dir="${bin}" />
		<mkdir dir="${bin}" />
	</target>
	<target name="compile" depends="init">
		<javac source="1.8" srcdir="${src}" fork="true" destdir="${bin}" >
			<classpath>
				<pathelement path="${bin}">
				</pathelement>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="exec" depends="compile">
		<delete dir="${report}" />
		<mkdir dir="${report}" />
			<mkdir dir="${report}/xml" />
		<junit printsummary="yes" haltonfailure="no">
			<classpath>
				<pathelement location="${bin}" />
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>

			<test name="wordFinder.FindWordsTest" haltonfailure="no" todir="${report}/xml" outfile="TEST-result">
				<formatter type="xml" />
			</test>
		</junit>
		<junitreport todir="${report}">
			<fileset dir="${report}/xml">
				<include name="TEST*.xml" />
			</fileset>
			<report format="frames" todir="${report}/html" />
		</junitreport>
	</target>
</project>

C. c



****************************************************
******* Maven Integration with Eclipse **********************
****************************************************
	Maven is a build automation tool used primarily for Java projects. 
	Maven addresses two aspects of building software: 
		First, it describes how software is built
	Second it describes its dependencies

	Contrary to preceding tools like Apache Ant it uses conventions for the
	build procedure, and only exceptions need to be written down.
	An XML file describes the software project being built, its dependencies
	on other external modules and components, the build order, directories,
	and required plug-ins.
	It comes with pre-defined targets for performing certain well-defined
	tasks such as compilation of code and its packaging.
	Maven dynamically downloads Java libraries and Maven plug-ins from one or
	more repositories such as the Maven 2 Central Repository, and stores them
	in a local cache.[4] 
	This local cache of downloaded artifacts can also be updated with 
	artifacts created by local projects. Public repositories can also be 
	updated.
	Maven can also be used to build and manage projects written:
		 C#, Ruby, Scala, and other languages
	The Maven project is hosted by the Apache Software Foundation, where it 
	was formerly part of the Jakarta Project.

1) Capture URL from http://www.eclipse.org/m2e/m2e-downloads.html
	a) 
http://download.eclipse.org/technology/m2e/releases/1.5/1.5.0.20140606-0033
2) In Eclipsse 
	a) select Help > Install New Software 
	b) select Add
	c) In Add Repostiory window 
		- provide name “Maven”
		- provide URL  http://download.eclipse.org/technology/m2e/releases/1.5/1.5.0.20140606-0033
	d) click OK
	e) follow prompts to completion
	f) restart Eclipse
3) Verify Maven integration with Eclipse
	a) in Eclipse select a project control click 
	b) select Configure
	c) one selection should be “Convert to Maven project”
4) Verify .m2 direct is created
	new-host-2:~ rduvalwa2$ ls .m2
			repository
5) Convert project to Maven project
	a) follow prompts
	b) result is the creation of an initial pom.xml file
	<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	  <modelVersion>4.0.0</modelVersion>
	  <groupId>SqlConnectors</groupId>
	  <artifactId>SqlConnectors</artifactId>
	  <version>0.0.1-SNAPSHOT</version>
	  <name>SqlConnectors</name>
	  <description>Sql connctor class and test in Java</description>
	  <build>
	    <sourceDirectory>src</sourceDirectory>
	    <resources>
	      <resource>
	        <directory>src</directory>
	        <excludes>
	          <exclude>**/*.java</exclude>
	        </excludes>
	      </resource>
	    </resources>
	    <plugins>
	      <plugin>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.1</version>
	        <configuration>
	          <source>1.8</source>
	          <target>1.8</target>
	        </configuration>
	      </plugin>
	    </plugins>
	  </build>
	</project>

	d) verify .m2 repository
		new-host-2:~ rduvalwa2$ ls .m2/repository/
			backport-util-concurrent	commons-logging
			classworlds			junit
			com				log4j
			commons-cli			org
		new-host-2:~ rduvalwa2$ 

6) Eclipse Build Maven project commands and command line:
   http://books.sonatype.com/mvnref-book/reference/running-sect-options.html
	mvn --help
	mvn help:describe -Dcmd=compiler:compile
 	mvn install -Dmaven.test.skip=true

   http://docs.codehaus.org/display/MAVENUSER/Maven%2Band%2BIntegration%2BTesting


   /Users/rduvalwa2/git/Java/Learning/Collections2

    Command Line		Eclipse
   1)  mvn install	From Run As > Maven Install
	runs the lifecycle phase install and all its predecessor phases like compile and test.
   2) mvn compiler:compile	


	

 a) control click top level of project
		1) select “Run as” > choose from drop down in this example 
		   “Maven test”
		2) Result
[INFO] Scanning for projects...
[INFO] 
[INFO] Using the builder org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder with a thread count of 1
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building SqlConnectors 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ SqlConnectors ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ SqlConnectors ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ SqlConnectors ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /Users/rduvalwa2/DevTools/eclipse-luna/workspace/Java/SqlConnectors/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ SqlConnectors ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ SqlConnectors ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.375 s
[INFO] Finished at: 2015-02-12T15:59:51-08:00
[INFO] Final Memory: 8M/183M
[INFO] ------------------------------------------------------------------------ 


7) Other Maven commands





******* Configure Maven pom.xml *************
http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
https://cwiki.apache.org/confluence/display/MAVEN/NoGoalSpecifiedException





