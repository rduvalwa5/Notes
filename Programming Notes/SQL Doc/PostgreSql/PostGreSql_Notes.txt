Postgresql Notes for Mac OSX

1) Installation was follow instructions
2) See http://www.postgresqlformac.com/server/error_startup_fails_after_i.html for operation



Download notes
PostgreSQL One Click Installer README
=====================================

Shared Memory
-------------

PostgreSQL uses shared memory extensively for caching and inter-process 
communication. Unfortunately, the default configuration of Mac OS X does
not allow suitable amounts of shared memory to be created to run the 
database server.

Before running the installation, please ensure that your system is 
configured to allow the use of larger amounts of shared memory. Note that
this does not 'reserve' any memory so it is safe to configure much higher
values than you might initially need. You can do this by editting the 
file /etc/sysctl.conf - e.g.

% sudo vi /etc/sysctl.conf

On a MacBook Pro with 2GB of RAM, the author's sysctl.conf contains:

kern.sysv.shmmax=1610612736
kern.sysv.shmall=393216
kern.sysv.shmmin=1
kern.sysv.shmmni=32
kern.sysv.shmseg=8
kern.maxprocperuid=512
kern.maxproc=2048

Note that (kern.sysv.shmall * 4096) should be greater than or equal to
kern.sysv.shmmax. kern.sysv.shmmax must also be a multiple of 4096.

Once you have edited (or created) the file, reboot before continuing with 
the installation. If you wish to check the settings currently being used by 
the kernel, you can use the sysctl utility:

% sysctl -a

The database server can now be installed.

For more information on PostgreSQL's use of shared memory, please see:

http://www.postgresql.org/docs/current/static/kernel-resources.html#SYSVIPC

Support
-------

For help with this installer, please visit the forum at:

http://forums.enterprisedb.com/forums/show/9.page

For help with the packages within the installer, please visit the packages
website.




---------------------------------------------------------


PhpPgAdmin Notes

1) PostGresSql Data base sever is installed on C1246895-A
-
2) PhpPgAmdin is install on C1246895-A
-
3) Access thru browser  http://c1246895-a:8080/phpPgAdmin/
-




PostGreSql Data Base Working with:
http://www.wikivs.com/wiki/MySQL_vs_PostgreSQL
  Both are time-proven solutions that compete strongly with proprietary database software. MySQL has long been assumed to be the faster but less full-featured of the two database systems, while PostgreSQL 
was assumed to be a more densely featured database system often described as an open-source version of Oracle. MySQL has been popular among various software projects because of its speed and ease of use, 
while PostgreSQL has had a close following from developers who come from an Oracle or SQL Server background. 
  These assumptions, however, are mostly outdated and incorrect. MySQL has come a long way in adding advanced functionality while PostgreSQL dramatically improved its speed within the last few major releases. 
Many, however, are unaware of the convergence and still hold on to stereotypes based on MySQL 4.1 and PostgreSQL 7.4. The current versions are MySQL 5.6 and PostgreSQL 9.1. 

Architecture
  PostgreSQL is a unified database server with a single storage engine. MySQL has two layers, an upper SQL layer and a set of storage engines. When comparing the two it's typically necessary to specify which storage 
engines are being used with MySQL because that greatly affects suitability, performance and (even basic) feature availability. The most commonly used storage engines in MySQL are InnoDB for almost full 
ACID support and high performance on large workloads with lots of concurrency and MyISAM for lower concurrency workloads or higher concurrency read-mostly workloads that don't need ACID properties.
Applications can combine multiple storage engines as required to exploit the advantages of each. 

http://en.wikipedia.org/wiki/ACID
ACID (atomicity, consistency, isolation, durability) is a set of properties that guarantee database transactions are processed reliably. 

ACID Compliance
ACID stands for Atomicity, Consistency, Isolation and Durability. This model is used to judge data integrity across database management systems. Most database systems achieve ACID compliance by 
using transactions AND enforcing triggers/ foreign keys (it's forgetting about this part that prevents consistency, as in InnoDB).
PostgreSQL is fully ACID compliant.
MySQL's InnoDB engine IS NOT ACID compliant, due to a lack of consistency regarding internal rules (Foreign key cascades do not fire triggers,API's don't fire triggers).
Some other MySQL engines are said to be ACID compliant, like Falcon / Cluster.
PostgreSQL is acknowledged as having a more rigorous approach to robustness and data integrity. 