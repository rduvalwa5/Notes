Working with GIT HUB
From RDuval Wiki

GIT_Notes

Working With GitHub

***************************************************************
******************* GIT Stuff *********************************
***************************************************************
1) to clear stored keys in ssh-agent: kill the process
2) rduval@GLTERRE-WS01 ~/.ssh
  $ ps -ef | grep ssh-agent
  rduval    2908       1   ?  12:37:18 /usr/bin/ssh-agent
  rduval@GLTERRE-WS01 ~/.ssh
  $ kill -9 2908
3) to start ssh-agent
  rduval@GLTERRE-WS01 ~/.ssh
  $ ssh-agent -s
  SSH_AUTH_SOCK=/tmp/ssh-lHPcXf1668/agent.1668; export SSH_AUTH_SOCK;
  SSH_AGENT_PID=6668; export SSH_AGENT_PID;
  echo Agent pid 6668;
  $ ps -ef | grep ssh-agent
  rduval    6668       1   ?  13:31:07 /usr/bin/ssh-agent
4) to view keys:
  

***************************************************************
****************   GIT Pull from Glenn ************************
***************************************************************
http://git-scm.com/docs/gitcredentials.html
https://help.github.com/articles/using-ssh-agent-forwarding
https://help.github.com/articles/error-permission-denied-publickey
https://help.github.com/articles/working-with-ssh-key-passphrases
-
1) https://sea-github.cisco.com/
  - You should have an account and have been added to organization-focused dashboards
  - personal repository folder https://sea-github.cisco.com/${username}
2) Install the git client with git bash at the following link
  - http://git-scm.com/downloads
3) Generate Keys
  - these procedures: https://help.github.com/articles/generating-ssh-keys

***************************************************************
****************   Set Up Git          ************************
***************************************************************
1) have Git installed
    - configure your settings
2) Need a quick lesson about Git Bash?
  Username
  a) tell git your name
     - so that it can properly label the commits you make
3) git config --global user.name "Your Name Here"
  # Sets the default name for git to use when you commit
4) Email
  Git saves your email address into the commits you make. 
  We use the email address to associate your commits with your GitHub account.
5) git config --global user.email "your_email@example.com"
  # Sets the default email for git to use when you commit
6) verify in C:\Users\rduval\.gitconfig
  $ less .gitconfig
    [user]
       name = rduval
       email = rduval@cisco.com


***************************************************************
****************   GIT Key Generation  ************************
***************************************************************
C:\Users\rduval\AppData\Local\Programs\Git\
---- 1. Create .ssh directory ----
1) From Git Bash
2) $ mkdir  ~/.ssh
rduval@GLTERRE-WS01 ~
$ pwd
/c/Users/rduval
rduval@GLTERRE-WS01 ~
$ cd .ssh
rduval@GLTERRE-WS01 ~/.ssh
$ ls -al
total 4
drwxr-xr-x    1 rduval   Administ        0 May  2 09:52 .
drwxr-xr-x    1 rduval   Administ     8192 May  2 09:52 ..
---- 2. Generate a new SSH key ----
To generate a new SSH key
    -  copy and paste the text below
    -  making sure to substitute in your email
    -  default settings are preferred
       when you're asked to "enter a file in which to save the key,"" 
       just press enter to continue
1) Text:
   $ssh-keygen -t rsa -C "your_email@example.com"
   # Creates a new ssh key, using the provided email as a label
   Generating public/private rsa key pair.
   Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]
-
Next, you'll be asked to enter a passphrase.
Tip: We strongly recommend a very good, secure passphrase. 
     For more information, see Working with SSH key passphrases.
-
2) red1!Dawg
-
3) $ ssh-keygen -t rsa -C "rduval@cisco.com"
   Generating public/private rsa key pair.
   Enter file in which to save the key (/c/Users/rduval/.ssh/id_rsa):
   Enter passphrase (empty for no passphrase):
   Enter same passphrase again:
   Your identification has been saved in /c/Users/rduval/.ssh/id_rsa.
   Your public key has been saved in /c/Users/rduval/.ssh/id_rsa.pub.
   The key fingerprint is:
   31:ce:39:c6:8c:b1:96:12:4d:cb:6a:e9:48:e5:d3:1b rduval@cisco.com
-
4)rduval@GLTERRE-WS01 ~/.ssh
  $ ls -al
  total 6
  drwxr-xr-x    1 rduval   Administ        0 May  2 10:02 .
  drwxr-xr-x    1 rduval   Administ     8192 May  2 09:52 ..
  -rw-r--r--    1 rduval   Administ     1743 May  2 10:02 id_rsa
  -rw-r--r--    1 rduval   Administ      398 May  2 10:02 id_rsa.pub
-
5) if fails Verify the ssh-agent is running
   rduval@GLTERRE-WS01 ~/.ssh
   $ ssh-add
   Could not open a connection to your authentication agent.
   rduval@GLTERRE-WS01 ~/.ssh
   $ cd ..
-
6) perform eval
   rduval@GLTERRE-WS01 ~
   $ eval `ssh-agent -s`
   Agent pid 3448
-
   eval is a function which evaluates a string as though it were an expression and returns a result;
   in others, it executes multiple lines of code as though they had been included instead of the
   line including the eval.
   - this started the ssh-agent server as confirmed by the return pid
-
7) This step adds pass code
   $ ssh-add
   Enter passphrase for /c/Users/rduval/.ssh/id_rsa:
   Identity added: /c/Users/rduval/.ssh/id_rsa (/c/Users/rduval/.ssh/id_rsa)
-
8) Then add your new key to the ssh-agent:
    rduval@GLTERRE-WS01 ~
    $ ssh-add ~/.ssh/id_rsa
    Enter passphrase for /c/Users/rduval/.ssh/id_rsa:
    Identity added: /c/Users/rduval/.ssh/id_rsa (/c/Users/rduval/.ssh/id_rsa)
-
---- Step 3: Add your SSH key to GitHub ----
 1) Run the following code to copy the key to your clipboard
     - clip < ~/.ssh/id_rsa.pub
     - Alternatively, using text editor
       you can open the ~/.ssh/id_rsa.pub file 
       and copy the contents of the file manually
-
 2) add it into GitHub
    a) In user bar in the top-right corner of any page: click Account Settings      
    b) Click SSH Keys in the left sidebar
    Now that you have the key copied, it's time to add it into GitHub:
    a) Account settings buttonIn the user bar in the top-right corner of any page, 
       click Account Settings.
    b) SSH Keys menuClick SSH Keys in the left sidebar
    c) SSH Key buttonClick Add SSH key
    d) Title field add a descriptive label for the new key
    e) key fieldPaste your key into the "Key" field.
    f) Add key buttonClick Add key.
    g) Confirm the action by entering your GitHub password.
-
 3) Recieve Email
    To: Randall Duval -T (rduval - TEKSYSTEMS INC at Cisco) <rduval@cisco.com>
    From: GitHub <noreply@sea-github.cisco.com>
    Subject: [GitHub] A new public key was added to your account
-
    The following SSH key was added to your account:
-
    OfficeWin
    31:ce:39:c6:8c:b1:96:12:4d:cb:6a:e9:48:e5:d3:1b
-
    If you believe this key was added in error, you can remove the key and disable access at the following location:
    https://sea-github.cisco.com/settings/ssh
-
---- Step 4: Test everything out ----
  1) Open up your Git Bash and type
  $ ssh-add -l
2048 46:76:b4:73:4b:e9:60:71:27:d1:1f:56:7e:61:49:f7 /c/Users/rduval/.ssh/id_rsa (RSA)
-
rduval@GLTERRE-WS01 ~/.ssh
$ ssh -T git@github.com
Warning: Permanently added the RSA host key for IP address '192.30.252.131' to the list of known hosts.
Permission denied (publickey).
-
rduval@GLTERRE-WS01 ~/.ssh
$
-
********* Sent email to GITHub for help ***********************
-
rduval@GLTERRE-WS01 ~/.ssh
$ ssh -i id_rsa.pub -vT git@github.com
OpenSSH_4.6p1, OpenSSL 0.9.8e 23 Feb 2007
debug1: Connecting to github.com [192.30.252.130] port 22.
debug1: Connection established.
debug1: identity file id_rsa.pub type 1
debug1: Remote protocol version 2.0, remote software version libssh-0.6.0
debug1: no match: libssh-0.6.0
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_4.6
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server->client aes128-cbc hmac-sha1 none
debug1: kex: client->server aes128-cbc hmac-sha1 none
debug1: sending SSH2_MSG_KEXDH_INIT
debug1: expecting SSH2_MSG_KEXDH_REPLY
debug1: Host 'github.com' is known and matches the RSA host key.
debug1: Found key in /c/Users/rduval/.ssh/known_hosts:1
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Offering public key: id_rsa.pub
debug1: Authentications that can continue: publickey
debug1: No more authentication methods to try.
Permission denied (publickey).
-
http://stackoverflow.com/questions/20964623/github-access-denied-access-for-push

*********************************************************
************ ssh-agent **********************************
*********************************************************
ssh-agent
Usage: ssh-agent [options] [command [args ...]]
Options:
 -c          Generate C-shell commands on stdout.
 -s          Generate Bourne shell commands on stdout.
 -k          Kill the current agent.
 -d          Debug mode.
 -a socket   Bind agent socket to given name.
 -t life     Default identity lifetime (seconds).
rduval@C1246895-J ~/.ssh

**********************************************************
Home GIT
**********************************************************
$ ssh-agent -l
ssh-agent: illegal option -- l
Usage: ssh-agent [options] [command [args ...]]
Options:
 -c          Generate C-shell commands on stdout.
 -s          Generate Bourne shell commands on stdout.
 -k          Kill the current agent.
 -d          Debug mode.
 -a socket   Bind agent socket to given name.
 -t life     Default identity lifetime (seconds).
rduval@C1246895-J ~/.ssh
$ ssh-add -l
Could not open a connection to your authentication agent.
rduval@C1246895-J ~/.ssh
$ eval `ssh-agent -s`
Agent pid 888
rduval@C1246895-J ~/.ssh
$ ssh-add -l
The agent has no identities.
rduval@C1246895-J ~/.ssh
$ ssh-add ~/.ssh.id_rsa
/c/Users/rduval/.ssh.id_rsa: No such file or directory
rduval@C1246895-J ~/.ssh
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /c/Users/rduval/.ssh/id_rsa:
Identity added: /c/Users/rduval/.ssh/id_rsa (/c/Users/rduval/.ssh/id_rsa)
rduval@C1246895-J ~/.ssh
$ ssh-add -l
2048 6f:a5:6b:3e:79:61:84:52:4e:8c:5b:b0:35:9b:74:ea /c/Users/rduval/.ssh/id_rsa (RSA)
rduval@C1246895-J ~/.ssh
$ clip < ~/.ssh/id_rsa.pub
rduval@C1246895-J ~/.ssh
$ ssh-add -l
2048 6f:a5:6b:3e:79:61:84:52:4e:8c:5b:b0:35:9b:74:ea /c/Users/rduval/.ssh/id_rsa (RSA)
rduval@C1246895-J ~/.ssh
$ ssh -T git@github.com
The authenticity of host 'github.com (192.30.252.128)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.252.128' (RSA) to the list of known hosts.
Hi rduvalwa5! You've successfully authenticated, but GitHub does not provide shell access.
rduval@C1246895-J ~/.ssh

-------- clone a new repository from GitHub -------------------------------
 This process will:
 1) Create the repository directory
 2) Initialize the directory as .git
 3) pulls down all the current data for that directory
Process: 
1. Create Directory where the repository is to be cloned:

$ mkdir GitHub_Repos

2. Change directory to that directory

$ cd GitHub_Repos/ rduval@C1246895-J ~/GitHub_Repos

3. Cloning the repository from GitHub

$ git clone git@github.com:rduvalwa5/MyTest-Test.git Cloning into 'MyTest-Test'... warning: You appear to have cloned an empty repository. rduval@C1246895-J ~/GitHub_Repos

4. Verifying Repository was created

$ ls MyTest-Test 