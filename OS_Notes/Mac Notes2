Mac OSX Notes:

1) Environment variables
	http://hathology.com/how-to-edit-your-path-environment-variables-on-mac-os-x/
	http://dhptech.com/article/2007/02/09/setting-environment-variables-for-mac-osx-programs
		- http://developer.apple.com/mac/library/documentation/MacOSX/Conceptual/BPRuntimeConfig/000-Introduction/introduction.html
		- http://developer.apple.com/mac/library/documentation/MacOSX/Conceptual/BPRuntimeConfig/Articles/EnvironmentVars.html#//apple_ref/doc/uid/20002093-BCIJIJBH
	
	Set up path:
		1) vi /ect/paths
		2) add one path item per line
		
		
2) Controlling environment variables using /Developer/Applications/PropertyListEditor  http://developer.apple.com/library/mac/#qa/qa2001/qa1067.html

	Note this is a really old document
	Technical Q&A QA1067
	Setting environment variables for user processes
	Q: How do I set environment for all processes launched by a specific user?

	A: It is actually fairly simple process to set environment variables for processes launched by a specific user.

	There is a special environment file which loginwindow searches for each time a user logs in. The environment file is: ~/.MacOSX/environment.plist (be careful it's case sensitive). Where '~' is the home 	directory of the user we are interested in. You will have to create the .MacOSX directory yourself using terminal (by typing mkdir .MacOSX). You will also have to create the environment file yourself. 	The environment file is actually in XML/plist format (make sure to add the .plist extension to the end of the filename or this won't work). An example environment file is shown below. The file was 		created using /Developer/Applications/PropertyListEditor.app

	Here the environment variables TestEnvironmentVariable and MrX are set to /My/Value and 1 respectively, every time that specific user logs in. You can add more environment variables by adding new 		siblings to the property list using the 'New Siblings' button shown above.

	Note that the key class must be string. If any other class is used the key will not be recognized by loginwindow. You can confirm the environment variables have been set as expected by typing setenv into 	terminal.

	Additional Note: On early builds of OSX (specifically 10.0.4 and earlier) the file used was 
	~/.OpenStep/environment instead of ~/.MacOSX/environment.plist. (note that the .plist extension is missing on 10.0.4 and earlier). The answer to your next question is: Yes, this is a relic left over from 	OpenStep/NextStep.

3) Installing Subversion notes
	location = /opt/subversion
	environment variable notes
	POS:t-Installation Notes
	You have successfully installed the Subversion 1.6.12 universal binary for OS X Snow Leopard (10.6).  Please remember to prepend /opt/subversion/bin to your PATH environment variable.  This can be done a 	multitude of ways but an easy one is to add the following to the end of ~/.profile:

	export PATH=/opt/subversion/bin:$PATH

	If you plan on running an Apache-based Subversion server, you will also need to prepend the DYLD_LIBRARY_PATH variable in /usr/sbin/envvars with /opt/subversion/lib so that the Subversion libraries 		shipped with this binary are used instead of those supplied by the operating system.  Here is an example snippet of what /usr/sbin/envvars might look like after making these changes:

	...
	DYLD_LIBRARY_PATH="/opt/subversion/lib:/usr/lib:$DYLD_LIBRARY_PATH"
	...


4) Enabling root user
Directory Utility - (Mac OS X 10.4 or later)

For Mac OS X 10.5 and later you can use the Directory Utility instead of NetInfo.
For just Mac OS X 10.5 you will find it in the Application/Utilities folder.
For Mac OS X 10.6 and later you start the Directory Utility from the System Preferences as follows:

1) Start System Preferences and select "Accounts".
2) Under the list of users press the "Login Options", and then next to that press the "Join..." button next to Network Account Server. 
   (You will not be joining a network account server, this is just the convoluted way to get to the Directory Utility).
3)  Press the button to "Open Directory Utility..."
    Once you launch the Directory Utility, however you do it, 
    then enable the root account by doing the following: 
     Click on the Lock icon and give the Administrator password to authenticate.
     (Menu Bar at Top)  Pull down the "Edit" menu to "Enable Root User"
     Pull down the "Edit" menu to "Change Root Password..." and enter a good, strong password for the root user.



/* Enable Read Write for NTFS */
Snow Leopard has the ability to mount NTFS volumes as read/write, but it's not enabled by default -- just read only is supported, as in 10.5.
Here's how to get full read/write support for NTFS drives in Snow Leopard. First, uninstall NTFS-3G or Paragon if you're using either one. 

Here's how to get read/write support for NTFS drives in Snow Leopard:
 In Terminal, 
 
 type diskutil info /Volumes/volume_name

, where volume_name is the name of the NTFS volume.
 From the output, copy the Volume UUID value to the clipboard.
 Back up /etc/fstab if you have it; it shouldn't be there in a default install.
 
 Type sudo nano /etc/fstab.
  In the editor, type UUID=, then paste the UUID number you copied from the clipboard.
  Type a Space, then type none ntfs rw. The final line should look like this: UUID=123-456-789 none ntfs rw, where 123-456-789 is the UUID you copied in the first step.
Repeat the above steps for any other NTFS drives/partitions you have.
Save the file and quit nano (Control-X, Y, Enter), then restart your system.
After rebooting, NTFS partitions should natively have read and write support. This works with both 32- and 64-bit kernels. Support is quite good and fast, and it even recognizes file attributes such as hidden files. My thanks go to Chrysaor, a MacRumors user who brought this to our attention. 


bash-3.2$ ls /volumes   
IOMEGA_HDD              Mac Osx Extended        OSX-RD                  RD
bash-3.2$ diskutil info /volumes/IOMEGA_HDD
   Device Identifier:        disk1s1
   Device Node:              /dev/disk1s1
   Part Of Whole:            disk1
   Device / Media Name:      Untitled 1

   Volume Name:              IOMEGA_HDD
   Escaped with Unicode:     IOMEGA_HDD

   Mounted:                  Yes
   Mount Point:              /Volumes/IOMEGA_HDD
   Escaped with Unicode:     /Volumes/IOMEGA_HDD

   File System:              NTFS
   Type:                     ntfs
   Name:                     Windows NT File System (NTFS)

   Partition Type:           Windows_NTFS
   Bootable:                 Not bootable
   Media Type:               Generic
   Protocol:                 USB
   SMART Status:             Not Supported
   Volume UUID:              0D3085B0-A5AE-453F-AFD1-CDAB9A08600E

   Total Size:               160.0 GB (160039240704 Bytes) (exactly 312576642 512-Byte-Blocks)
   Volume Free Space:        52.0 GB (52004552704 Bytes) (exactly 101571392 512-Byte-Blocks)

   Read-Only Media:          No
   Read-Only Volume:         Yes
   Ejectable:                Yes

   Whole:                    No
   Internal:                 No


new-host-4:Volumes rduvalwa2$ ls
IOMEGA_HDD		Mac Osx Extended	OSX-RD			RD
new-host-4:Volumes rduvalwa2$ diskutil info /Volumes/RD
   Device Identifier:        disk1s1
   Device Node:              /dev/disk1s1
   Part Of Whole:            disk1
   Device / Media Name:      Untitled 1

   Volume Name:              RD
   Escaped with Unicode:     RD

   Mounted:                  Yes
   Mount Point:              /Volumes/RD
   Escaped with Unicode:     /Volumes/RD

   File System:              NTFS
   Type:                     ntfs
   Name:                     Windows NT File System (NTFS)

   Partition Type:           Windows_NTFS
   Bootable:                 Not bootable
   Media Type:               Generic
   Protocol:                 USB
   SMART Status:             Not Supported
   Volume UUID:              A883F7A8-7DB2-487F-A4C4-CF99F600B857

   Total Size:               320.1 GB (320070288384 Bytes) (exactly 625137282 512-Byte-Blocks)
   Volume Free Space:        313.5 GB (313501810688 Bytes) (exactly 612308224 512-Byte-Blocks)

   Read-Only Media:          No
   Read-Only Volume:         Yes
   Ejectable:                Yes

   Whole:                    No
   Internal:                 No




/* end */
---------------------------------------------------------

Screen capture on Mac
http://graphicssoft.about.com/od/screencapturemac/ht/macscreenshot.htm

1)	To capture the entire desktop, press Command-Shift-3.
The screen shot will be automatically saved as a PNG file on your desktop.
2)	To copy the entire desktop, press Command-Control-Shift-3. 
The screen shot will be placed on your clipboard for you to paste into another program.

4)  To capture a portion of the desktop, press Command-Shift-4. 
A cross-hair cursor will appear and you can click and drag to select the area you wish to capture. 
When you release the mouse button, the screen shot will be automatically saved as a PNG file on your desktop.
 (The file is saved as PDF in Mac OS 10.3 and earlier.)

5)  To capture a specific application window, press Command-Shift-4, then press the Spacebar. 
The cursor will change to a camera, and you can move it around the screen. 
As you move the cursor over an application window, the window will be highlighted. 
The entire window does not need to be visible for you to capture it. 
When you have the cursor over a window you want to capture, just click the mouse button and the screen 
shot will be saved as a PNG file on your desktop. (The file is saved as PDF in Mac OS 10.3 and earlier.)

6)  Add Control to the two shortcuts above to place the screen shot on the clipboard instead of saving it to the desktop.

7)  Another method for capturing screen shots in Mac OS X is by using the bundled Apple utility, Grab, located in the Applications > Utilities folder. Grab is useful if you need to include a cursor or a menu in your screen shot, or if you want to save your screen shot to TIFF format. To include a cursor, first go to Grab Preferences and select the cursor icon you wish to have in your screen shot. 

8)  To capture the screen with Grab, run Grab, then choose of the capture modes from the "Capture" menu:
 Selection, Window, Screen, Timed Screen.
When you choose the Selection mode in Grab, you can capture a specific region of the screen by dragging around it.
 Grab will display a tooltip showing the size of the region you have selected and the screen shot will open in
  a window when you release the mouse button. 
  The cursor will not be included.
When you choose the Window mode in Grab, an instruction window will appear asking you to select the window you 
wish to capture, then click the "Choose Window" button. 
When you click the button, the instructions will disappear and the window you click ill be captured,
 including the mouse cursor at the position where you click (if a cursor was selected in Preferences).
When you choose the Screen mode in Grab, an instruction window will appear asking you to click the screen when you are ready to capture. The mouse cursor will be included in your screen shot at the position where you click (if a cursor was selected in Preferences).
When you choose the Timed Screen mode in Grab, an instruction window will appear, allowing you to prepare your screen for capture. When you are ready, press the "Start Timer" button and you will have ten seconds before the screen is captured. This allows you to open menus and sub-menus, if necessary. After ten seconds the entire screen will be captured. The mouse cursor will be included in your screen shot if a cursor was selected in Preferences.

